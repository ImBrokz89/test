local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/ImBrokz89/test/main/addons"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/ImBrokz89/test/main/Maddons"))()

local Window = Fluent:CreateWindow({
   Title = "Omega Hub I Warrior Simulator",
   TabWidth = 160,
   Size = UDim2.fromOffset(580, 460),
   Theme = "Dark",
   Acrylic = false,
   MinimizeKey = Enum.KeyCode.End 
})

Fluent:Notify({
   Title = "Notification",
   Content = "Script injected :)",
   Duration = 5 
})

local Tabs = {
    Main = Window:AddTab({ Title = "Auto Farm",}),
    Players = Window:AddTab({Title = "Player"}),
    Stats = Window:AddTab({Title = "Stats"}),
    Pets = Window:AddTab({ Title = "Pets",}),
    Obby = Window:AddTab({ Title = "Obby",}),
    Misc = Window:AddTab({ Title = "Misc",}),
    Settings = Window:AddTab({ Title = "Settings",})
 }
 
 
 --------------- Main

 local Toggle = Tabs.Main:AddToggle("Auto Farm",
 {
     Title = "Auto Farm V1",
     Default = false, 
     Callback = function(auto)
         _G.autoFarmEnabled = auto
         while _G.autoFarmEnabled do
             game:GetService("ReplicatedStorage").Remotes.Weapon.TakeDamage:FireServer()
             wait(0.1)
         end
     end
 })

 local Toggle = Tabs.Main:AddToggle("Auto Rebirth",
 {
     Title = "Auto Rebirth ",
     Default = false, 
     Callback = function(Rebirth)
         _G.autoascendEnabled = Rebirth
         while _G.autoascendEnabled do
             game:GetService("ReplicatedStorage").Remotes.Profile.RebirthRequest:InvokeServer()
             wait(15)
         end
 
     end
 })

 local Section = Tabs.Main:AddSection("Players Farm")
 
 local Toggle = Tabs.Main:AddToggle("Auto Fight",
 {
     Title = "Auto Fight ",
     Default = false, 
     Callback = function(Fight)
         _G.autoFightEnabled = Fight
         if _G.autoFightEnabled then
            local args = {
             [1] = true
            }
            game:GetService("ReplicatedStorage").Remotes.Battle.AutoFight:FireServer(unpack(args))
        else
            local args = {
                [1] = false
            }
                game:GetService("ReplicatedStorage").Remotes.Battle.AutoFight:FireServer(unpack(args))
         end 
     end
 })


 --------------- Players
 
 local Slider = Tabs.Players:AddSlider("WalkSpeed", 
 {
     Title = "WalkSpeed V1",
     Default = 18,
     Min = 18,
     Max = 120,
     Rounding = 1,
     Callback = function(Value)
         game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
     end
 })
 
 local Section = Tabs.Players:AddSection("Sword")
 
 local Toggle = Tabs.Players:AddToggle("Auto Best Sword",
 {
     Title = "Best Sword",
     Default = false, 
     Callback = function(sword)
         _G.autoswordEnabled = sword
         while _G.autoswordEnabled do
             game:GetService("ReplicatedStorage").Remotes.Weapon.EquipBest:FireServer()
               wait(20)
         end
     end
 })


 local Toggle = Tabs.Players:AddToggle("Upgrade Weapon",
 {
     Title = "Auto Upgrade Weapon ",
     Default = false, 
     Callback = function(Weapon)
         _G.autoWeaponEnabled = Weapon
         while _G.autoWeaponEnabled do
            game:GetService("ReplicatedStorage").Remotes.Weapon.Upgrade:FireServer()
            wait(15)
         end

     end
 })
 
--------------- Stats
local Toggle = Tabs.Stats:AddToggle("Stats Defense",
{
    Title = "Stats Defense",
    Default = false, 
    Callback = function(pets)
        _G.Defense = pets
        while _G.Defense do
            local args = {
         [1] = "Defense",
         [2] = 1
        }
        game:GetService("ReplicatedStorage").Remotes.Profile.AddPoint:FireServer(unpack(args))

            wait(5)
        end
    end
})

local Toggle = Tabs.Stats:AddToggle("Stats Damage",
{
    Title = "Stats Damage",
    Default = false, 
    Callback = function(pets)
        _G.damage = pets
        while _G.damage do
            local args = {
         [1] = "Damage",
         [2] = 1
        }
        game:GetService("ReplicatedStorage").Remotes.Profile.AddPoint:FireServer(unpack(args))

            wait(5)
        end
    end
})

local Toggle = Tabs.Stats:AddToggle("Stats Speed",
{
    Title = "Stats Speed",
    Default = false, 
    Callback = function(pets)
        _G.Speed = pets
        while _G.Speed do
            local args = {
         [1] = "Speed",
         [2] = 1
        }
        game:GetService("ReplicatedStorage").Remotes.Profile.AddPoint:FireServer(unpack(args))

            wait(5)
        end
    end
})

local Toggle = Tabs.Stats:AddToggle("Stats Luck",
{
    Title = "Stats Luck",
    Default = false, 
    Callback = function(pets)
        _G.Luck = pets
        while _G.Luck do
            local args = {
             [1] = "Luck",
             [2] = 1
            }
        game:GetService("ReplicatedStorage").Remotes.Profile.AddPoint:FireServer(unpack(args))
            wait(5)
        end
    end
})
--------------- Pets
 
local Toggle = Tabs.Pets:AddToggle("Auto Best Pets",
{
    Title = "Best Pets",
    Default = false, 
    Callback = function(pets)
        _G.autopetsEnabled = pets
        while _G.autopetsEnabled do
            game:GetService("ReplicatedStorage").Remotes.Common.Pet.EquipBest:FireServer()
            wait(5)
        end
    end
})



Tabs.Pets:AddButton({
    Title = "Unequip All ",
    Callback = function()
    game:GetService("ReplicatedStorage").Remotes.Common.Pet.UnequipAll:FireServer()
    end
})

 --------------- Obby
 Tabs.Obby:AddButton({
    Title = "Obby World 2",
    Callback = function()
        local player = game.Players.LocalPlayer
        local treasurePart = game:GetService("Workspace").World["2"].Obby.Decoration["结束平台"].baoxiang.tx:FindFirstChild("B - TREASURE")
        
        if treasurePart then
            player.Character.HumanoidRootPart.CFrame = treasurePart.CFrame
        else
            print("Partie B - TREASURE introuvable")
        end
        
    end
})

 --------------- Misc
 Tabs.Misc:AddButton({
    Title = "Redeem All Codes",
    Callback = function()
        local args = {"welcome", "like300k", "like400k"}
        for _, giftids in ipairs(args) do
        game:GetService("ReplicatedStorage").Remotes.Common.Reward.CodeReward:FireServer(giftids)
        wait(0.2)
        end
    end
})

 
Tabs.Misc:AddButton({
    Title = "Instant Online Gift",
    Callback = function()
        local args = {1, 2, 3, 4, 5, 6, 7, 8}
        for _, giftId in ipairs(args) do
            game:GetService("ReplicatedStorage").Remotes.Common.Online.TryGetOnlineGift:InvokeServer(giftId)
            wait(0.5) 
        end
        game:GetService("ReplicatedStorage").Remotes.Common.Online.UpdateOnlineInfo:FireServer()
    end
})

 Tabs.Misc:AddButton({
     Title = "Claim Wheels",
     Callback = function()
     game:GetService("ReplicatedStorage").Remotes.Common.Spin.TrySpin:InvokeServer()
     end
 })

Tabs.Misc:AddButton({
    Title = "Daily Gems",
    Callback = function()
        game:GetService("ReplicatedStorage").Remotes.Common.Market.GetFreeGem:InvokeServer()
        wait(0.2)
        game:GetService("ReplicatedStorage").Remotes.Common.Market.LastFreeGemTime:InvokeServer()
    end
})



---------------


-- Adding SaveManager and InterfaceManager functionalities
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore theme settings in the save manager
SaveManager:IgnoreThemeSettings()

-- Build the interface and config sections
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)

-- Load any saved settings when the script starts
SaveManager:LoadAutoloadConfig()

-- Initial tab selection (Auto Farm Tab)
Window:SelectTab(1)

-- Notification to indicate the full script has been loaded
Fluent:Notify({
   Title = "Omega Hub",
   Content = "The script has been loaded.",
   Duration = 5
})
